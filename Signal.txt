今天的任务：
:

：多线程编程
：进程替换
：信号的使用
：write和fwrite相关，与内核的调用关系
：进程间通信两个标准下的异同
：互斥锁和条件变量
：套接字编程的图
；gdb的使用
：fib实现方式的时间/空间复杂度
：实现mycopy;
：动态库与静态库L
：总结到此为止c++OJ
---------------------------

//信号的产生方式：
1.硬件中断  ：ctrl+c
2.硬件异常
3.kill函数etc..
4.软件条件


//信号处理的常见方式
1.忽略
2.执行默认方式
3.自定义方式  catch一个信号

core dump  通过gdb可以查看

//
kill raise abort 

//SIGPIPE
可以捕捉： 服务端关闭连接时，client再次请求连接的时候，会发送给一个该信号，终止客户端；管道所有读断关闭时，写段return-1 关闭前也会接收到该信号

//SIGALRM
alarm函数可以设定1个闹钟,也就是告诉内核在seconds秒之后给当前进程发SIGALRM信号, 该信号的默
认处理动作是终?当前进程。


//SIGSEGV
当一个进程执行了一个无效的内存引用或者发生了段错误时，给他发送的信号










